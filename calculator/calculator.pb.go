// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/calculator.proto

package calculator

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the operands to be added
type Operands struct {
	A                    int32    `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    int32    `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Operands) Reset()         { *m = Operands{} }
func (m *Operands) String() string { return proto.CompactTextString(m) }
func (*Operands) ProtoMessage()    {}
func (*Operands) Descriptor() ([]byte, []int) {
	return fileDescriptor_efa30b76d83302dd, []int{0}
}

func (m *Operands) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Operands.Unmarshal(m, b)
}
func (m *Operands) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Operands.Marshal(b, m, deterministic)
}
func (m *Operands) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Operands.Merge(m, src)
}
func (m *Operands) XXX_Size() int {
	return xxx_messageInfo_Operands.Size(m)
}
func (m *Operands) XXX_DiscardUnknown() {
	xxx_messageInfo_Operands.DiscardUnknown(m)
}

var xxx_messageInfo_Operands proto.InternalMessageInfo

func (m *Operands) GetA() int32 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *Operands) GetB() int32 {
	if m != nil {
		return m.B
	}
	return 0
}

// The request message containing the list of numbers to be added
type Numbers struct {
	Num                  []int32  `protobuf:"varint,1,rep,packed,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Numbers) Reset()         { *m = Numbers{} }
func (m *Numbers) String() string { return proto.CompactTextString(m) }
func (*Numbers) ProtoMessage()    {}
func (*Numbers) Descriptor() ([]byte, []int) {
	return fileDescriptor_efa30b76d83302dd, []int{1}
}

func (m *Numbers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Numbers.Unmarshal(m, b)
}
func (m *Numbers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Numbers.Marshal(b, m, deterministic)
}
func (m *Numbers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Numbers.Merge(m, src)
}
func (m *Numbers) XXX_Size() int {
	return xxx_messageInfo_Numbers.Size(m)
}
func (m *Numbers) XXX_DiscardUnknown() {
	xxx_messageInfo_Numbers.DiscardUnknown(m)
}

var xxx_messageInfo_Numbers proto.InternalMessageInfo

func (m *Numbers) GetNum() []int32 {
	if m != nil {
		return m.Num
	}
	return nil
}

// The response message containing the result of the calculation
type Summation struct {
	Sum                  int32    `protobuf:"varint,1,opt,name=sum,proto3" json:"sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Summation) Reset()         { *m = Summation{} }
func (m *Summation) String() string { return proto.CompactTextString(m) }
func (*Summation) ProtoMessage()    {}
func (*Summation) Descriptor() ([]byte, []int) {
	return fileDescriptor_efa30b76d83302dd, []int{2}
}

func (m *Summation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Summation.Unmarshal(m, b)
}
func (m *Summation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Summation.Marshal(b, m, deterministic)
}
func (m *Summation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Summation.Merge(m, src)
}
func (m *Summation) XXX_Size() int {
	return xxx_messageInfo_Summation.Size(m)
}
func (m *Summation) XXX_DiscardUnknown() {
	xxx_messageInfo_Summation.DiscardUnknown(m)
}

var xxx_messageInfo_Summation proto.InternalMessageInfo

func (m *Summation) GetSum() int32 {
	if m != nil {
		return m.Sum
	}
	return 0
}

func init() {
	proto.RegisterType((*Operands)(nil), "calculator.Operands")
	proto.RegisterType((*Numbers)(nil), "calculator.Numbers")
	proto.RegisterType((*Summation)(nil), "calculator.Summation")
}

func init() { proto.RegisterFile("calculator/calculator.proto", fileDescriptor_efa30b76d83302dd) }

var fileDescriptor_efa30b76d83302dd = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4e, 0x4e, 0xcc, 0x49,
	0x2e, 0xcd, 0x49, 0x2c, 0xc9, 0x2f, 0xd2, 0x47, 0x30, 0xf5, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85,
	0xb8, 0x10, 0x22, 0x4a, 0x6a, 0x5c, 0x1c, 0xfe, 0x05, 0xa9, 0x45, 0x89, 0x79, 0x29, 0xc5, 0x42,
	0x3c, 0x5c, 0x8c, 0x89, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x8c, 0x89, 0x20, 0x5e, 0x92,
	0x04, 0x13, 0x84, 0x97, 0xa4, 0x24, 0xcd, 0xc5, 0xee, 0x57, 0x9a, 0x9b, 0x94, 0x5a, 0x54, 0x2c,
	0x24, 0xc0, 0xc5, 0x9c, 0x57, 0x9a, 0x2b, 0xc1, 0xa8, 0xc0, 0xac, 0xc1, 0x1a, 0x04, 0x62, 0x2a,
	0xc9, 0x72, 0x71, 0x06, 0x97, 0xe6, 0xe6, 0x26, 0x96, 0x64, 0xe6, 0xe7, 0x81, 0xa4, 0x8b, 0xc1,
	0xd2, 0x20, 0x9d, 0x20, 0xa6, 0x51, 0x39, 0x17, 0x97, 0x33, 0xdc, 0x46, 0x21, 0x13, 0x2e, 0x66,
	0xc7, 0x94, 0x14, 0x21, 0x11, 0x3d, 0x24, 0x77, 0xc1, 0x9c, 0x20, 0x25, 0x8a, 0x2c, 0x0a, 0x37,
	0x53, 0x89, 0x41, 0xc8, 0x98, 0x8b, 0x39, 0xb8, 0x34, 0x57, 0x48, 0x18, 0x59, 0x1e, 0xea, 0x20,
	0x9c, 0x9a, 0x92, 0xd8, 0xc0, 0xfe, 0x35, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x7d, 0x75, 0xc8,
	0xa7, 0x0e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CalculatorClient is the client API for Calculator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorClient interface {
	// Add service takes two operand and returns their summation
	Add(ctx context.Context, in *Operands, opts ...grpc.CallOption) (*Summation, error)
	// Sum service takes a list of operands and returns their summation
	Sum(ctx context.Context, in *Numbers, opts ...grpc.CallOption) (*Summation, error)
}

type calculatorClient struct {
	cc grpc.ClientConnInterface
}

func NewCalculatorClient(cc grpc.ClientConnInterface) CalculatorClient {
	return &calculatorClient{cc}
}

func (c *calculatorClient) Add(ctx context.Context, in *Operands, opts ...grpc.CallOption) (*Summation, error) {
	out := new(Summation)
	err := c.cc.Invoke(ctx, "/calculator.Calculator/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorClient) Sum(ctx context.Context, in *Numbers, opts ...grpc.CallOption) (*Summation, error) {
	out := new(Summation)
	err := c.cc.Invoke(ctx, "/calculator.Calculator/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalculatorServer is the server API for Calculator service.
type CalculatorServer interface {
	// Add service takes two operand and returns their summation
	Add(context.Context, *Operands) (*Summation, error)
	// Sum service takes a list of operands and returns their summation
	Sum(context.Context, *Numbers) (*Summation, error)
}

// UnimplementedCalculatorServer can be embedded to have forward compatible implementations.
type UnimplementedCalculatorServer struct {
}

func (*UnimplementedCalculatorServer) Add(ctx context.Context, req *Operands) (*Summation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedCalculatorServer) Sum(ctx context.Context, req *Numbers) (*Summation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}

func RegisterCalculatorServer(s *grpc.Server, srv CalculatorServer) {
	s.RegisterService(&_Calculator_serviceDesc, srv)
}

func _Calculator_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Operands)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.Calculator/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServer).Add(ctx, req.(*Operands))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calculator_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Numbers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.Calculator/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServer).Sum(ctx, req.(*Numbers))
	}
	return interceptor(ctx, in, info, handler)
}

var _Calculator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.Calculator",
	HandlerType: (*CalculatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Calculator_Add_Handler,
		},
		{
			MethodName: "Sum",
			Handler:    _Calculator_Sum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calculator/calculator.proto",
}
